tests:
<<<<<<< HEAD
  - name: Check if jest.config.js exists
    run: test -f jest.config.js
    input: ""
    output: ""
    comparison: included
    timeout: 10
    points: 5

  - name: Check if package.json has test scripts
    run: grep -q "\"test\"" package.json
    input: ""
    output: ""
    comparison: included
    timeout: 10
    points: 5

  - name: Check for server-side test files
    run: test -d server/tests
=======
  - name: Check for GitHub workflow files
    run: test -d .github/workflows
>>>>>>> second-origin/main
    input: ""
    output: ""
    comparison: included
    timeout: 10
    points: 10

<<<<<<< HEAD
  - name: Check for client-side test files
    run: test -d client/src/tests
=======
  - name: Check for CI/CD configuration
    run: grep -q "ci\|cd\|deploy\|build\|test" .github/workflows -r
>>>>>>> second-origin/main
    input: ""
    output: ""
    comparison: included
    timeout: 10
    points: 10

<<<<<<< HEAD
  - name: Check for Jest dependencies
    run: grep -q "jest" package.json
=======
  - name: Check for environment variable templates
    run: test -f .env.example
>>>>>>> second-origin/main
    input: ""
    output: ""
    comparison: included
    timeout: 10
    points: 10

<<<<<<< HEAD
  - name: Check for React Testing Library
    run: grep -q "testing-library/react" client/package.json || grep -q "testing-library/react" package.json
=======
  - name: Check for production build scripts
    run: grep -q "\"build\"" client/package.json && grep -q "\"build\"" server/package.json
>>>>>>> second-origin/main
    input: ""
    output: ""
    comparison: included
    timeout: 10
    points: 10

<<<<<<< HEAD
  - name: Check for Supertest
    run: grep -q "supertest" server/package.json || grep -q "supertest" package.json
=======
  - name: Check for secure HTTP headers
    run: grep -q "helmet\|cors\|xss\|security" server/src -r
>>>>>>> second-origin/main
    input: ""
    output: ""
    comparison: included
    timeout: 10
    points: 10

<<<<<<< HEAD
  - name: Check for unit tests
    run: find . -name "*.test.js" -o -name "*.test.jsx" | grep -q "unit"
=======
  - name: Check for MongoDB Atlas configuration
    run: grep -q "mongodb+srv\|atlas\|cluster" .env.example || grep -q "mongodb+srv\|atlas\|cluster" server/src -r
>>>>>>> second-origin/main
    input: ""
    output: ""
    comparison: included
    timeout: 10
    points: 10

<<<<<<< HEAD
  - name: Check for integration tests
    run: find . -name "*.test.js" -o -name "*.test.jsx" | grep -q "integration"
=======
  - name: Check for health check endpoint
    run: grep -q "health\|status\|ping" server/src -r
>>>>>>> second-origin/main
    input: ""
    output: ""
    comparison: included
    timeout: 10
    points: 10

<<<<<<< HEAD
  - name: Check for end-to-end test setup
    run: test -d cypress || test -d playwright || grep -q "cypress\|playwright" package.json
=======
  - name: Check for error tracking setup
    run: grep -q "sentry\|error.*tracking\|monitoring" server/src -r || grep -q "sentry\|error.*tracking\|monitoring" client/src -r
>>>>>>> second-origin/main
    input: ""
    output: ""
    comparison: included
    timeout: 10
    points: 10

<<<<<<< HEAD
  - name: Check for error handling tests
    run: grep -q "error\|catch\|try" server/tests -r || grep -q "error\|catch\|try" client/src/tests -r
=======
  - name: Check for deployment documentation
    run: grep -q "deploy\|hosting\|production" README.md
    input: ""
    output: ""
    comparison: included
    timeout: 10
    points: 10

  - name: Check for logging configuration
    run: grep -q "log\|winston\|morgan\|debug" server/src -r
>>>>>>> second-origin/main
    input: ""
    output: ""
    comparison: included
    timeout: 10
    points: 10 